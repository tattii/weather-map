{"version":3,"sources":["BaseLayer.js","weather-map-front.js","satellite.js","weather-map-layer.js","TimeButton.js","WeatherMap.js","Map.js","App.js","index.js"],"names":["BaseLayer","constructor","map","this","addSource","addLayer","WeatherMapFront","geojson","add","type","data","source","set","getSource","setData","split","features","filter","f","properties","includes","reduce","concat","turf","segment","chunks","i","Object","assign","z","addFront","id","offset","width","Satellite","show","fetch","mode","then","res","json","console","log","length","hide","index","validtime","getLayer","removeLayer","removeSource","datetime","findIndex","d","moment","utc","url","basetime","tiles","minzoom","maxzoom","addLayerJP","bouds","WeatherMapLayer","hover","e","queryRenderedFeatures","point","layers","layerId","html","getCanvas","style","cursor","code","popup","setLngLat","lngLat","setHTML","addTo","remove","sourceId","addMap","analysis","mapboxgl","Popup","closeButton","off","satellite","fetchGeojson","front","setTyphoon","addLayers","forEach","pressure","isobar","addIsobar","addSymbols","addTyphoons","dash","paint","addLabel","label","color","typhoonGeojson","center","name","parseInt","number","substr","TimeButton","Component","state","back","Math","max","forward","min","list","componentDidMount","listener","window","addEventListener","key","componentWillUnmount","removeEventListener","componentDidUpdate","prevProps","props","forecasts","forecast","slice","reverse","datetime_str","setState","render","Button","Group","className","icon","inverted","onClick","content","disabled","l","select","format","Warning","layer","load","onload","timestamp","Date","getTime","accessToken","component","WeatherMap","Map","layerIndex","selectLayer","container","mapContainer","zoom","hash","logoPosition","attributionControl","fadeDuration","on","base","child","ref","el","renderLayer","React","createElement","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b74918e7.chunk.js","sourcesContent":["\nexport default class BaseLayer {\n  constructor(map) {\n    this.map = map;\n    this.map.addSource(\"vt\", {\n      \"type\": \"vector\",\n      \"minzoom\": 0,\n      \"maxzoom\": 10,\n      \"tiles\": [\"https://weatherbox.github.io/warning-area-vt/v2/{z}/{x}/{y}.pbf\"]\n    });\n\n    this.map.addLayer({\n      \"id\": \"pref-line\",\n      \"type\": \"line\",\n      \"source\": \"vt\",\n      \"source-layer\": \"pref\",\n      \"paint\": {\n        \"line-color\": \"rgba(70, 70, 70, 0.4)\"\n      }\n    });\n  }\n}\n","import * as turf from '@turf/turf';\n\nexport default class WeatherMapFront {\n  constructor(map, geojson) {\n    this.map = map;\n    this.add(geojson);\n  }\n\n  add(geojson) {\n    this.map.addSource('weathermap-front', {\n      type: 'geojson',\n      data: this.source(geojson)\n    });\n    this.addLayer();\n  }\n\n  set(geojson) {\n    this.map.getSource('weathermap-front').setData(this.source(geojson));\n  }\n\n  source(geojson) {\n    const front = geojson.features.filter(f => f.properties.type && f.properties.type.includes('前線'));\n    const split = front.reduce((features, f) => {\n      return features.concat(this.split(f).features);\n    }, []);\n\n    return turf.featureCollection(split);\n  }\n\n  split(f) {\n    const segment = f.properties.type === '停滞前線' ? 450 : 360; // km\n    const chunks = turf.lineChunk(f, segment);\n    for (let i in chunks.features) {\n      chunks.features[i].properties = Object.assign({}, f.properties);\n      if (turf.length(chunks.features[i]) < 100) {\n        chunks.features[i].properties.z = 10;\n      }\n    }\n    return chunks;\n  }\n\n  addLayer() {\n    this.addFront('cold', '寒冷前線', -8);\n    this.addFront('warm', '温暖前線', 5);\n    this.addFront('stationary', '停滞前線', -3);\n    this.addFront('occuluded', '閉塞前線', 7);\n  }\n  \n  addFront(id, type, offset, width) {\n    this.map.addLayer({\n      \"id\": \"front-symbol-\" + id,\n      \"type\": \"symbol\",\n      \"source\": \"weathermap-front\",\n      \"minzoom\": 3.0,\n      \"layout\": {\n        \"icon-image\": \"front2-\" + id,\n        \"icon-size\": [\n          'interpolate',\n          ['exponential', 1.0],\n          ['zoom'],\n          3, 0.6,\n          8, 1.6\n        ],\n        \"symbol-placement\": \"line-center\",\n        \"symbol-spacing\": 100,\n        \"icon-offset\": [0, offset],\n        \"icon-rotate\": 180,\n      },\n      \"filter\": [\"all\",\n        [\"==\", \"type\", type],\n        [\"!=\", \"z\", 10]\n      ]\n    });\n  }\n}\n","import moment from 'moment';\n\nexport default class Satellite {\n  constructor(map) {\n    this.map = map;\n    this.add();\n    this.show = null;\n  }\n\n  add() {\n    fetch('https://dkve47d2tju8b.cloudfront.net/omaad/rsmc_nowcast/en/jmatile/data/hcai/targetTimes.json', { mode: 'cors' })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        this.data = data;\n        this.show = data.length - 1;\n        this.addLayer(data[this.show]);\n      });\n  }\n\n  hide(index) {\n    const id = 'sat-' + this.data[index || this.show].validtime;\n    if (this.map.getLayer(id)) this.map.removeLayer(id);\n    if (this.map.getSource(id)) this.map.removeSource(id);\n  }\n \n  set(datetime) {\n    if (!this.data) return;\n    const index = this.data.findIndex(d => {\n      return moment(datetime) - moment.utc(d.validtime, 'YYYYMMDDHHdd') === 0;\n    });\n    console.log(index);\n    if (index < 0) {\n      this.hide();\n    } else {\n      this.addLayer(this.data[index]);\n      this.hide(this.show);\n      this.show = index;\n    }\n  }\n\n  addLayer(d) {\n    const url = 'https://www.data.jma.go.jp/tile/satimg/' + d.basetime + '/fd/' + d.validtime + '/B13/TBB/{z}/{x}/{y}.png';\n    const id = 'sat-' + d.validtime;\n    this.map.addSource(id, {\n      type: 'raster',\n      tiles: [url],\n      minzoom: 1,\n      maxzoom: 6,\n      //bouds: [119, 19, 155, 51]\n    });\n\n   this. map.addLayer({\n      \"id\": id,\n      \"type\": \"raster\",\n      \"source\": id,\n      \"paint\": {\n        \"raster-opacity\": 0.3\n      }\n    }, \"isobar-2hPa\");\n  }\n  \n  addLayerJP(d) {\n    const url = 'https://www.data.jma.go.jp/tile/satprod/' + d.basetime + '/JP/' + d.validtime + '/B13/TBB/{z}/{x}/{y}.png';\n    this.map.addSource('satellite', {\n      type: 'raster',\n      tiles: [url],\n      minzoom: 3,\n      maxzoom: 7,\n      bouds: [119, 19, 155, 51]\n    });\n  }\n}\n","import mapboxgl from 'mapbox-gl';\n\nimport WeatherMapFront from './weather-map-front';\nimport Satellite from './satellite';\n\nexport default class WeatherMapLayer {\n  constructor(map, data) {\n    this.map = map;\n    this.data = data;\n    this.layerId = 'weather-map';\n    this.sourceId = 'weathermap';\n\n    this.addMap();\n  }\n\n  addMap() {\n    this.addLayer(this.data.analysis[0].url);\n    //this.addLayer('https://storage.googleapis.com/weather-map/analysis/202006280000.geojson');\n\n    this.popup = new mapboxgl.Popup({\n      closeButton: false\n    });\n    //this.map.on('mousemove', this.hover);\n  }\n\n  remove() {\n    this.map.removeLayer(this.layerId);\n    this.map.off('mousemove', this.hover);\n    this.popup.remove();\n  }\n\n  set(datetime, url, type) {\n    this.addLayer(url);\n\n    if (type === 'forecast') {\n      this.satellite.hide();\n    } else {\n      this.satellite.set(datetime);\n    }\n  }\n  \n  async addLayer(url) {\n    const geojson = await this.fetchGeojson(url);\n\n    const source = this.map.getSource(this.sourceId);\n    if (!source) {\n      this.map.addSource(this.sourceId, {\n        type: 'geojson',\n        data: geojson\n      });\n      this.addLayers(geojson);\n      this.satellite = new Satellite(this.map);\n\n    } else {\n      source.setData(geojson);\n      this.front.set(geojson);\n      this.setTyphoon(geojson);\n    }\n  }\n\n  async fetchGeojson(url) {\n    const res = await fetch(url, { mode: 'cors' });\n    const geojson = await res.json();\n\n    geojson.features.forEach((f, i) => {\n      if (f.properties.type === 'isobar') {\n        if (f.properties.pressure % 20 === 0) {\n          geojson.features[i].properties.isobar = '20hPa';\n        } else if (f.properties.pressure % 4 === 0) {\n          geojson.features[i].properties.isobar = '4hPa';\n        } else if (f.properties.pressure % 2 === 0) {\n          geojson.features[i].properties.isobar = '2hPa';\n        }\n      }\n    });\n    return geojson;\n  }\n  \n  addLayers(geojson) {\n    this.addIsobar('2hPa', 0.75, [10, 5]);\n    this.addIsobar('4hPa', 0.75);\n    this.addIsobar('20hPa', 1.5);\n\n    this.front = new WeatherMapFront(this.map, geojson);\n    this.map.addLayer({\n      \"id\": \"front\",\n      \"type\": \"line\",\n      \"source\": \"weathermap\",\n      \"paint\": {\n        \"line-width\": 4,\n        \"line-color\": [\n          \"match\",\n          [\"get\", \"type\"],\n          \"寒冷前線\", \"#1437B1\",\n          \"温暖前線\", \"#7A1C1C\",\n          \"停滞前線\", \"#39144C\",\n          \"閉塞前線\", \"#39144C\",\n          /* default */ \"#000\"\n        ]\n      },\n      \"filter\": [\"in\", \"type\", \"寒冷前線\", \"温暖前線\", \"停滞前線\", \"閉塞前線\"]\n    });\n   \n    this.addSymbols();\n    this.addTyphoons(geojson);\n  }\n\n  addIsobar(type, width, dash) {\n    const paint = {\n      \"line-color\": \"#ccc\",\n      \"line-opacity\": 0.3,\n      \"line-width\": width\n    };\n    if (dash) paint['line-dasharray'] = dash;\n    this.map.addLayer({\n      \"id\": \"isobar-\" + type,\n      \"type\": \"line\",\n      \"source\": \"weathermap\",\n      \"paint\": paint,\n      \"filter\": [\"all\",\n        [\"==\", \"type\", \"isobar\"],\n        [\"==\", \"isobar\", type]\n      ]\n    });\n  }\n  \n  addSymbols() {\n    this.map.addLayer({\n      \"id\": \"symbol\",\n      \"type\": \"symbol\",\n      \"source\": \"weathermap\",\n      \"layout\": {\n        \"icon-image\": \"center\",\n        \"icon-size\": 0.6,\n        \"icon-allow-overlap\": true\n      },\n      \"paint\": {\n        \"icon-opacity\": 0.7\n      },\n      filter: [\"in\", \"type\", \"低気圧\", \"高気圧\", \"熱帯低気圧\"]\n    });\n    \n    this.map.addLayer({\n      \"id\": \"symbol-pressure\",\n      \"type\": \"symbol\",\n      \"source\": \"weathermap\",\n      \"minzoom\": 3.0,\n      \"layout\": {\n        \"text-field\": \"{pressure}\",\n        \"text-size\": 12,\n        \"text-font\": [\"DIN Pro Regular\"],\n        \"text-offset\": [0, 1.4]\n      },\n      \"paint\": {\n        \"text-color\": \"rgba(255, 255, 255, 0.8)\"\n      },\n      filter: [\"in\", \"type\", \"低気圧\", \"高気圧\", \"熱帯低気圧\"]\n    });\n\n    this.addLabel('低気圧', 'L', '#7A1C1C');\n    this.addLabel('高気圧', 'H', '#1437B1');\n    this.addLabel('熱帯低気圧', 'TD', '#7A1C1C');\n  }\n\n  addLabel(type, label, color) {\n    this.map.addLayer({\n      \"id\": \"symbol-\" + label,\n      \"type\": \"symbol\",\n      \"source\": \"weathermap\",\n      \"layout\": {\n        \"text-field\": label,\n        \"text-size\": 20,\n        \"text-font\": [\"DIN Pro Bold\"],\n        \"text-offset\": [0, -1.0]\n      },\n      \"paint\": {\n        \"text-color\": color,\n        \"text-halo-color\": \"rgba(255, 255, 255, 0.4)\",\n        \"text-halo-width\": 1\n      },\n      filter: [\"==\", \"type\", type]\n    });\n  }\n\n  addTyphoons(geojson) {\n    this.map.addSource('weathermap-ty', {\n      type: 'geojson',\n      data: this.typhoonGeojson(geojson)\n    });\n\n    this.map.addLayer({\n      \"id\": \"symbol-ty-pressure\",\n      \"type\": \"symbol\",\n      \"source\": \"weathermap-ty\",\n      \"minzoom\": 3.0,\n      \"layout\": {\n        \"text-field\": \"{pressure}\",\n        \"text-allow-overlap\": true,\n        \"text-size\": 12,\n        \"text-font\": [\"DIN Pro Regular\"],\n        \"text-offset\": [-1.6, 2.2]\n      },\n      \"paint\": {\n        \"text-color\": \"rgba(255, 255, 255, 0.8)\"\n      },\n    });\n    this.map.addLayer({\n      \"id\": \"symbol-ty\",\n      \"type\": \"symbol\",\n      \"source\": \"weathermap-ty\",\n      \"layout\": {\n        \"icon-image\": \"center\",\n        \"icon-size\": 0.6,\n        \"icon-allow-overlap\": true,\n        \"text-field\": \"{name}\",\n        \"text-size\": 12,\n        \"text-font\": [\"Noto Sans CJK JP Regular\"],\n        \"text-offset\": [-1.5, 1]\n      },\n      \"paint\": {\n        \"icon-opacity\": 0.7,\n        \"text-color\": \"rgba(255, 255, 255, 0.8)\"\n      },\n    });\n  }\n  \n  setTyphoon(geojson) {\n    this.map.getSource('weathermap-ty').setData(this.typhoonGeojson(geojson));\n  };\n\n  typhoonGeojson(geojson) {\n    const typhoon = geojson.features.filter(f => 'typhoonClass' in f.properties)\n      .map(f => {\n        f.properties.pressure = f.properties.center.pressure;\n        f.properties.name = '台' + parseInt(f.properties.name.number.substr(2)) + '号';\n        return f;\n      });\n    return { type: 'FeatureCollection', features: typhoon };\n  }\n\n  hover = (e) => {\n    const features = this.map.queryRenderedFeatures(e.point, { layers: [this.layerId] });\n    this.map.getCanvas().style.cursor = (features.length) ? 'crosshair' : '';\n\n    let html;\n    if (features.length) {\n      const code = features[0].properties.code;\n      html = code;\n    }\n    \n    if (html) {\n      this.popup.setLngLat(e.lngLat)\n        .setHTML(html)\n        .addTo(this.map);\n    } else {\n      this.popup.remove();\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from 'semantic-ui-react';\nimport moment from 'moment';\n\nimport './TimeButton.css';\n\nexport default class TimeButton extends Component {\n  state = {\n    index: null,\n    datetime: null,\n  };\n\n  componentDidMount() {\n    this.listener = window.addEventListener('keydown', (e) => {\n      if (e.key === 'ArrowLeft') {\n        this.back();\n        return null;\n      } else if (e.key === 'ArrowRight') {\n        this.forward();\n        return null;\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.listener);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.data !== prevProps.data) {\n      const data = this.props.data;\n      const forecasts = [data.forecast['24h'], data.forecast['48h']].map(d => {\n        d.type = 'forecast';\n        return d;\n      });\n      this.list = data.analysis.slice().reverse().concat(forecasts);\n      const datetime = this.datetime_str(data.analysis[0].datetime);\n      this.setState({ index: data.analysis.length - 1, datetime });\n    }\n  }\n\n  render() {\n    return (\n      <Button.Group className=\"time-button\">\n        <Button icon='left chevron' inverted onClick={this.back} />\n        <Button content={this.state.datetime} inverted disabled />\n        <Button icon='right chevron' inverted onClick={this.forward} />\n      </Button.Group>\n    );\n  }\n\n  back = () => {\n    const index = Math.max(0, this.state.index - 1);\n    this.set(index);\n  }\n\n  forward = () => {\n    const index = Math.min(this.list.length - 1, this.state.index + 1);\n    this.set(index);\n  }\n\n  set(index) {\n    const l = this.list[index];\n    let datetime = this.datetime_str(l.datetime);\n    if (l.type === 'forecast') datetime += '(予想)';\n    this.setState({ index, datetime });\n    this.props.select(l.datetime, l.url, l.type);\n  }\n\n  datetime_str(datetime) {\n    return moment(datetime).format('MM/DD HH:mm');\n  }\n}\n","import React, { Component } from 'react';\n\nimport WeatherMapLayer from './weather-map-layer';\nimport TimeButton from './TimeButton';\n\nconst url = 'https://storage.googleapis.com/weather-map/weather-map.json';\n\nexport default class Warning extends Component {\n  state = {\n    data: null,\n  };\n\n  componentDidMount() {\n    this.map = this.props.map;\n    this.load();\n  }\n\n  componentWillUnmount() {\n    this.layer.remove();\n  }\n\n  onload(map) {\n    this.map = map;\n    this.addLayer();\n  }\n  \n  load() {\n    const timestamp = new Date().getTime();\n    fetch(url + '?' + timestamp, { mode: 'cors' })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        this.setState({ data });\n        this.data = data;\n        this.addLayer();\n      });\n  }\n\n  addLayer() {\n    if (!this.map || !this.data) return;\n    this.layer = new WeatherMapLayer(this.map, this.data);\n  }\n\n  render() {\n    return <TimeButton\n      data={this.state.data}\n      select={this.select}\n    />;\n  }\n\n  select = (datetime, url, type) => {\n    this.layer.set(datetime, url, type);\n  }\n}\n","import React, { Component } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css'\n\nimport BaseLayer from './BaseLayer';\nimport './Map.css';\n\nimport WeatherMap from './WeatherMap';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoidGF0dGlpIiwiYSI6ImNqZWZ4eWM3NTI2cGszM2xpYXEyZndpd3IifQ.ifzbR45HecVGxChbdR2hiw';\n\nconst layers = [\n  {\n    id: 'weather-map',\n    component: WeatherMap,\n    name: '天気図',\n    icon: 'warning sign'\n  },\n];\n\n\nexport default class Map extends Component {\n  state = { layerIndex: 0 };\n\n  componentDidMount() {\n    this.map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/tattii/ckc0b6ks64uks1io9nljrkbhs',\n      zoom: 4.2,\n      center: [136.6, 35.5],\n      hash: true,\n      logoPosition: 'bottom-right',\n      attributionControl: false,\n      fadeDuration: 0,\n    });\n\n    this.map.on('load', () => {\n      this.base = new BaseLayer(this.map);\n      this.child.onload(this.map);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div ref={el => this.mapContainer = el} id=\"map\" />\n        {this.renderLayer()}\n      </div>\n    )\n  }\n\n  renderLayer() {\n    const props = {\n      map: this.map,\n      ref: ref => this.child = ref,\n    };\n    return React.createElement(layers[this.state.layerIndex].component, props);\n  }\n\n  selectLayer = (index) => {\n    this.setState({ layerIndex: index });\n  }\n}\n","import React, { Component } from 'react';\n\nimport Map from './Map';\n\nclass App extends Component {\n  render() {\n    return (\n      <Map />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('app'));\n\n"],"sourceRoot":""}